{"version":3,"sources":["components/Navbar/NavbarElements.js","components/Navbar/index.js","pages/index.js","pages/about.js","pages/services.js","pages/contact.js","pages/signup.js","App.js","serviceWorker.js","index.js"],"names":["Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","NavBtnLink","Navbar","to","activeStyle","Home","style","display","justifyContent","alignItems","height","About","Services","Contact","href","SignUp","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sOAIaA,EAAMC,IAAOC,IAAV,iPAYHC,EAAUF,YAAOG,IAAPH,CAAH,mNAcPI,EAAOJ,YAAOK,IAAPL,CAAH,8QAeJM,EAAUN,IAAOO,IAAV,0RAiBPC,EAASR,IAAOC,IAAV,4OAcNQ,EAAaT,YAAOG,IAAPH,CAAH,2X,OClCRU,EAhCA,WACb,OACE,mCACE,eAACX,EAAD,WACE,cAACG,EAAD,CAASS,GAAG,IAAZ,SACA,mDAEA,cAACP,EAAD,IACA,eAACE,EAAD,WACE,cAACJ,EAAD,CAASS,GAAG,SAASC,aAAW,EAAhC,mBAGA,cAACV,EAAD,CAASS,GAAG,YAAYC,aAAW,EAAnC,sBAGA,cAACV,EAAD,CAASS,GAAG,cAAcC,aAAW,EAArC,wBAGA,cAACV,EAAD,CAASS,GAAG,WAAWC,aAAW,EAAlC,wBAMF,cAACJ,EAAD,UACE,cAACC,EAAD,CAAYE,GAAG,UAAf,6B,OClBKE,EAfF,WACX,OACE,qBACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QALZ,SAQE,0DCKSC,EAfD,WACZ,OACE,qBACEL,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QALZ,SAQE,0CCKSE,EAfE,WACf,OACE,qBACEN,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QALZ,SAQE,6C,QCcSG,EArBC,WACd,OACE,sBACEP,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QALZ,UAQE,mDACA,8BACF,cAAC,IAAD,CAAcI,KAAK,6CAAnB,SACE,+BAAM,qDCDGC,EAfA,WACb,OACE,qBACET,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QALZ,SAQE,4CCaSM,MAff,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWd,IACjC,cAAC,IAAD,CAAOY,KAAK,SAASE,UAAWR,IAChC,cAAC,IAAD,CAAOM,KAAK,YAAYE,UAAWP,IACnC,cAAC,IAAD,CAAOK,KAAK,cAAcE,UAAWN,IACrC,cAAC,IAAD,CAAOI,KAAK,WAAWE,UAAWJ,WCPtBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4adba093.chunk.js","sourcesContent":["import { FaBars } from 'react-icons/fa';\nimport { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Nav = styled.nav`\n  background: #000;\n  height: 80px;\n  display: flex;\n  justify-content: space-between;\n  padding: 0.5rem calc((100vw - 1000px) / 2);\n  z-index: 10;\n\n  /* Third Nav */\n  /* justify-content: flex-start; */\n`;\n\nexport const NavLink = styled(Link)`\n  color: #fff;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  cursor: pointer;\n\n  &.active {\n    color: #15cdfc;\n  }\n`;\n\nexport const Bars = styled(FaBars)`\n  display: none;\n  color: #fff;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform: translate(-100%, 75%);\n    font-size: 1.8rem;\n    cursor: pointer;\n  }\n`;\n\nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: -24px;\n\n  /* Second Nav */\n  /* margin-right: 24px; */\n\n  /* Third Nav */\n  /* width: 100vw;\n  white-space: nowrap; */\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtn = styled.nav`\n  display: flex;\n  align-items: center;\n  margin-right: 24px;\n\n  /* Third Nav */\n  /* justify-content: flex-end;\n  width: 100vw; */\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const NavBtnLink = styled(Link)`\n  border-radius: 4px;\n  background: #256ce1;\n  padding: 10px 22px;\n  color: #fff;\n  outline: none;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n\n  /* Second Nav */\n  margin-left: 24px;\n\n  &:hover {\n    transition: all 0.2s ease-in-out;\n    background: #fff;\n    color: #010606;\n  }\n`;\n","import React from 'react';\nimport {\n  Nav,\n  NavLink,\n  Bars,\n  NavMenu,\n  NavBtn,\n  NavBtnLink\n} from './NavbarElements';\n\nconst Navbar = () => {\n  return (\n    <>\n      <Nav>\n        <NavLink to='/'>\n        <h1>Click for Home </h1>\n        </NavLink>\n        <Bars />\n        <NavMenu>\n          <NavLink to='/about' activeStyle>\n            About\n          </NavLink>\n          <NavLink to='/services' activeStyle>\n            Services\n          </NavLink>\n          <NavLink to='/contact-us' activeStyle>\n            Contact Us\n          </NavLink>\n          <NavLink to='/sign-up' activeStyle>\n            Sign Up\n          </NavLink>\n          {/* Second Nav */}\n          {/* <NavBtnLink to='/sign-in'>Sign In</NavBtnLink> */}\n        </NavMenu>\n        <NavBtn>\n          <NavBtnLink to='/signin'>Sign In</NavBtnLink>\n        </NavBtn>\n      </Nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst Home = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '90vh'\n      }}\n    >\n      <h1>Welcome Rahul Ghosh M</h1>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '90vh'\n      }}\n    >\n      <h1>About</h1>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst Services = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '90vh'\n      }}\n    >\n      <h1>Services</h1>\n    </div>\n  );\n};\n\nexport default Services;\n","import React from 'react';\nimport { ExternalLink } from 'react-external-link';\n\n\n\nconst Contact = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '90vh'\n      }}\n    >\n      <h1>Click to connect </h1>\n      <div>\n    <ExternalLink href=\"https://www.linkedin.com/in/rahul-ghosh-m/\">\n      <span><h1>@ Linkdin</h1></span>\n    </ExternalLink>\n  </div>\n    </div>\n    \n  );\n};\n\nexport default Contact;\n","import React from 'react';\n\nconst SignUp = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '90vh'\n      }}\n    >\n      <h1>Sign Up</h1>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages';\nimport About from './pages/about';\nimport Services from './pages/services';\nimport Contact from './pages/contact';\nimport SignUp from './pages/signup';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/about' component={About} />\n        <Route path='/services' component={Services} />\n        <Route path='/contact-us' component={Contact} />\n        <Route path='/sign-up' component={SignUp} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}